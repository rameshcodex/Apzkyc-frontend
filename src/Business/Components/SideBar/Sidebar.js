import * as React from 'react';
import { styled, useTheme } from '@mui/material/styles';
import { useState, useEffect } from 'react';
import Box from '@mui/material/Box';
import MuiDrawer from '@mui/material/Drawer';
import MuiAppBar from '@mui/material/AppBar';
import Toolbar from '@mui/material/Toolbar';
import List from '@mui/material/List';
import CssBaseline from '@mui/material/CssBaseline';
import Typography from '@mui/material/Typography';
import Divider from '@mui/material/Divider';
import IconButton from '@mui/material/IconButton';
import MenuIcon from '@mui/icons-material/Menu';
import ChevronLeftIcon from '@mui/icons-material/ChevronLeft';
import ChevronRightIcon from '@mui/icons-material/ChevronRight';
import ListItem from '@mui/material/ListItem';
import ListItemButton from '@mui/material/ListItemButton';
import ListItemIcon from '@mui/material/ListItemIcon';
import ListItemText from '@mui/material/ListItemText';
import Collapse from '@mui/material/Collapse';
import apx from '../../../Images/apzlogo.png'
import './Sidebar.css'
import { NavLink } from 'react-router-dom';
import { useLocation } from 'react-router-dom';
import Stack from '@mui/material/Stack';
import Switch from '@mui/material/Switch';
import Avatar from '@mui/material/Avatar';
import NotificationsOutlinedIcon from '@mui/icons-material/NotificationsOutlined';
import Badge from '@mui/material/Badge';
import btnprf from '../../../Images/selfie.png'
// import { useTheme } from '@mui/material/styles';
import useMediaQuery from '@mui/material/useMediaQuery';
import Drawer from '@mui/material/Drawer';
import Popover from '@mui/material/Popover';
import Button from '@mui/material/Button';
import LogoutIcon from '@mui/icons-material/Logout';
import { useNavigate } from 'react-router-dom';
import Axios from '../../../Axios';
import { decryptData } from '../../../middleware';
import ExpandLess from '@mui/icons-material/ExpandLess';
import ExpandMore from '@mui/icons-material/ExpandMore';
import Plans from '../../../Images/plan.gif'
import { AssuredWorkload } from '@mui/icons-material';

const AntSwitch = styled(Switch)(({ theme }) => ({
    width: 28,
    height: 16,
    padding: 0,
    display: 'flex',
    '&:active': {
        '& .MuiSwitch-thumb': {
            width: 15,
        },
        '& .MuiSwitch-switchBase.Mui-checked': {
            transform: 'translateX(9px)',
        },
    },
    '& .MuiSwitch-switchBase': {
        padding: 2,
        '&.Mui-checked': {
            transform: 'translateX(12px)',
            color: '#fff',
            '& + .MuiSwitch-track': {
                opacity: 1,
                backgroundColor: theme.palette.mode === 'dark' ? '#177ddc' : '#dfca6f',
            },
        },
    },
    '& .MuiSwitch-thumb': {
        boxShadow: '0 2px 4px 0 rgb(0 35 11 / 20%)',
        width: 12,
        height: 12,
        borderRadius: 6,
        transition: theme.transitions.create(['width'], {
            duration: 200,
        }),
    },
    '& .MuiSwitch-track': {
        borderRadius: 16 / 2,
        opacity: 1,
        backgroundColor:
            theme.palette.mode === 'dark' ? 'rgba(255,255,255,.35)' : 'rgba(0,0,0,.25)',
        boxSizing: 'border-box',
    },
}));


const drawerWidth = 200;

const openedMixin = (theme) => ({
    width: drawerWidth,
    transition: theme.transitions.create('width', {
        easing: theme.transitions.easing.sharp,
        duration: theme.transitions.duration.enteringScreen,
    }),
    overflowX: 'hidden',
});

const closedMixin = (theme) => ({
    transition: theme.transitions.create('width', {
        easing: theme.transitions.easing.sharp,
        duration: theme.transitions.duration.leavingScreen,
    }),
    overflowX: 'hidden',
    width: `calc(${theme.spacing(7)} + 1px)`,
    [theme.breakpoints.up('sm')]: {
        width: `calc(${theme.spacing(8)} + 1px)`,
    },
});

const DrawerHeader = styled('div')(({ theme }) => ({
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'flex-end',
    padding: theme.spacing(0, 1),
    ...theme.mixins.toolbar,
}));

const AppBar = styled(MuiAppBar, {
    shouldForwardProp: (prop) => prop !== 'open',
})(({ theme, open }) => ({
    zIndex: theme.zIndex.drawer + 1,
    transition: theme.transitions.create(['width', 'margin'], {
        easing: theme.transitions.easing.sharp,
        duration: theme.transitions.duration.leavingScreen,
    }),
    ...(open && {
        marginLeft: drawerWidth,
        width: `calc(100% - ${drawerWidth}px)`,
        transition: theme.transitions.create(['width', 'margin'], {
            easing: theme.transitions.easing.sharp,
            duration: theme.transitions.duration.enteringScreen,
        }),
    }),
}));

const Drawers = styled(MuiDrawer, {
    shouldForwardProp: (prop) => prop !== 'open',
})(({ theme, open }) => ({
    width: drawerWidth,
    flexShrink: 0,
    whiteSpace: 'nowrap',
    boxSizing: 'border-box',
    ...(open && {
        ...openedMixin(theme),
        '& .MuiDrawer-paper': openedMixin(theme),
    }),
    ...(!open && {
        ...closedMixin(theme),
        '& .MuiDrawer-paper': closedMixin(theme),
    }),
}));

export default function Sidebar({ statuss }) {
    const theme = useTheme();
    const isLgup = useMediaQuery(theme.breakpoints.up('lg'));

    const mobileUp = useMediaQuery(theme.breakpoints.up('sm'));

    const [usertype, setUserType] = useState('')
    const token = localStorage.getItem('Rikosta')

    const subAdminDetails = JSON.parse(localStorage.getItem('subadmin'))

    const [openList, setOpenList] = useState(false);

    const [openList2, setOpenList2] = useState(false);

    const handleClickList = () => {
        setOpenList(!openList);
    };

    const handleClickList2 = () => {
        setOpenList2(!openList2);
    };

    useEffect(() => {
        if (token) {
            var user = window.localStorage.getItem('userType');
            const userType = decryptData(user)
            setUserType(userType)
        }
    }, [token])

    const navigate = useNavigate()

    const [open, setOpen] = useState(true);

    const handleDrawerOpen = () => {
        setOpen(true);
    };

    const handleDrawerClose = () => {
        setOpen(false);
    };

    const loaction = useLocation()

    const activeFil = loaction.pathname.toLocaleLowerCase()


    const [anchorEl, setAnchorEl] = React.useState(null);

    const handleClick = (event) => {
        setAnchorEl(event.currentTarget);
    };

    const handleClose = () => {
        setAnchorEl(null);
    };

    const openPop = Boolean(anchorEl);
    const id = openPop ? 'simple-popover' : undefined;

    const [anchorEl2, setAnchorEl2] = React.useState(null);

    const handleClick2 = (event) => {
        setAnchorEl2(event.currentTarget);
    };

    const handleClose2 = () => {
        setAnchorEl2(null);
    };

    const openPop2 = Boolean(anchorEl2);
    const id2 = openPop2 ? 'simple-popover' : undefined;

    // useEffect(() => {
    //     setOpen(false);
    // }, [open]);

    useEffect(() => {
        if (!isLgup) {
            setOpen(false);
        }
    }, [isLgup]);

    const [imageExists, setImageExists] = useState(null);
    const [profile, setProfile] = useState()
    const getProfile = async () => {
        try {
            const { data } = await Axios.get('/getProfile', {
                headers: {
                    Authorization: window.localStorage.getItem('Rikosta')
                }
            })
            if (data?.success == true) {
                setProfile(data?.result)
                const img = new Image();
                img.src = data?.result?.image;

                img.onload = () => {
                    setImageExists(true);
                };

                img.onerror = () => {
                    setImageExists(false);
                };
            }
        } catch (error) {
            console.log("ðŸš€ ~ getProfile ~ error:", error)
        }
    }

    useEffect(() => {
        getProfile()
    }, [])
    useEffect(() => {
        if ((statuss == true) || (statuss == false)) {
            getProfile()
        }
    }, [statuss])

    // const statuss = async (data) => {
    //     if (data == true) {
    //         getProfile()
    //     }
    // }

    const [routes, setRoutes] = useState([
        {
            name: 'Dashboard',
            svg: <svg xmlns="http://www.w3.org/2000/svg" width="28" height="27" viewBox="0 0 28 27" fill="none">
                <path d="M4.00244 13.4147C4.00244 13.1182 4.12021 12.8339 4.32983 12.6243C4.53945 12.4146 4.82377 12.2969 5.12022 12.2969H8.47355C8.77001 12.2969 9.05432 12.4146 9.26394 12.6243C9.47356 12.8339 9.59133 13.1182 9.59133 13.4147V20.1213C9.59133 20.4178 9.47356 20.7021 9.26394 20.9117C9.05432 21.1213 8.77001 21.2391 8.47355 21.2391H5.12022C4.82377 21.2391 4.53945 21.1213 4.32983 20.9117C4.12021 20.7021 4.00244 20.4178 4.00244 20.1213V13.4147ZM11.8269 13.4147C11.8269 13.1182 11.9447 12.8339 12.1543 12.6243C12.3639 12.4146 12.6482 12.2969 12.9447 12.2969H23.0047C23.3011 12.2969 23.5854 12.4146 23.7951 12.6243C24.0047 12.8339 24.1224 13.1182 24.1224 13.4147V20.1213C24.1224 20.4178 24.0047 20.7021 23.7951 20.9117C23.5854 21.1213 23.3011 21.2391 23.0047 21.2391H12.9447C12.6482 21.2391 12.3639 21.1213 12.1543 20.9117C11.9447 20.7021 11.8269 20.4178 11.8269 20.1213V13.4147Z" fill={"#373D4D"} />
                <path opacity="0.7" d="M23.0047 4.47266H5.12022C4.50289 4.47266 4.00244 4.9731 4.00244 5.59043V8.94377C4.00244 9.5611 4.50289 10.0615 5.12022 10.0615H23.0047C23.622 10.0615 24.1224 9.5611 24.1224 8.94377V5.59043C24.1224 4.9731 23.622 4.47266 23.0047 4.47266Z" fill={"#373D4D"} />
            </svg>,
            path: '/dashboard'

        },
        // {
        //     name: 'Applicants',
        //     svg: <svg xmlns="http://www.w3.org/2000/svg" width="28" height="28" viewBox="0 0 28 28" fill="none">
        //         <path fillRule="evenodd" clipRule="evenodd" d="M12.9446 9.68957C12.9446 10.7272 12.5324 11.7222 11.7987 12.4559C11.065 13.1896 10.0699 13.6018 9.03234 13.6018C7.99475 13.6018 6.99966 13.1896 6.26598 12.4559C5.5323 11.7222 5.12012 10.7272 5.12012 9.68957C5.12012 8.65198 5.5323 7.65689 6.26598 6.92321C6.99966 6.18952 7.99475 5.77734 9.03234 5.77734C10.0699 5.77734 11.065 6.18952 11.7987 6.92321C12.5324 7.65689 12.9446 8.65198 12.9446 9.68957ZM11.2679 9.68957C11.2679 10.2825 11.0324 10.8511 10.6131 11.2703C10.1939 11.6896 9.62525 11.9251 9.03234 11.9251C8.43943 11.9251 7.87081 11.6896 7.45156 11.2703C7.03231 10.8511 6.79678 10.2825 6.79678 9.68957C6.79678 9.09666 7.03231 8.52804 7.45156 8.10879C7.87081 7.68954 8.43943 7.45401 9.03234 7.45401C9.62525 7.45401 10.1939 7.68954 10.6131 8.10879C11.0324 8.52804 11.2679 9.09666 11.2679 9.68957ZM23.0046 11.3662C23.0046 12.2556 22.6513 13.1085 22.0224 13.7374C21.3935 14.3663 20.5406 14.7196 19.6512 14.7196C18.7619 14.7196 17.9089 14.3663 17.2801 13.7374C16.6512 13.1085 16.2979 12.2556 16.2979 11.3662C16.2979 10.4769 16.6512 9.62394 17.2801 8.99507C17.9089 8.3662 18.7619 8.0129 19.6512 8.0129C20.5406 8.0129 21.3935 8.3662 22.0224 8.99507C22.6513 9.62394 23.0046 10.4769 23.0046 11.3662ZM21.3279 11.3662C21.3279 11.8109 21.1512 12.2374 20.8368 12.5518C20.5224 12.8663 20.0959 13.0429 19.6512 13.0429C19.2065 13.0429 18.7801 12.8663 18.4656 12.5518C18.1512 12.2374 17.9746 11.8109 17.9746 11.3662C17.9746 10.9216 18.1512 10.4951 18.4656 10.1807C18.7801 9.86621 19.2065 9.68957 19.6512 9.68957C20.0959 9.68957 20.5224 9.86621 20.8368 10.1807C21.1512 10.4951 21.3279 10.9216 21.3279 11.3662Z" fill={activeFil === '/applicant3' ? "var(--theme-color)" : "#373D4D"} />
        //         <path d="M3.72256 21.4272C3.72257 20.1673 4.22307 18.959 5.11397 18.0681C6.00487 17.1772 7.21319 16.6767 8.47312 16.6767H9.5909C10.8508 16.6767 12.0591 17.1772 12.95 18.0681C13.841 18.959 14.3415 20.1673 14.3415 21.4272H16.0181C16.0181 20.4637 16.4009 19.5397 17.0821 18.8585C17.7634 18.1772 18.6874 17.7944 19.6509 17.7944C20.6144 17.7944 21.5384 18.1772 22.2197 18.8585C22.9009 19.5397 23.2837 20.4637 23.2837 21.4272H24.9603C24.9605 20.2938 24.5979 19.1901 23.9257 18.2775C23.2535 17.365 22.3069 16.6915 21.2244 16.3556C20.1419 16.0197 18.9803 16.039 17.9096 16.4108C16.8388 16.7825 15.9152 17.4871 15.2737 18.4215C14.7271 17.3884 13.9091 16.5239 12.9078 15.921C11.9065 15.3181 10.7597 14.9997 9.5909 15H8.47312C6.76852 15 5.13373 15.6772 3.92839 16.8825C2.72305 18.0878 2.0459 19.7226 2.0459 21.4272H3.72256Z" fill={activeFil === '/applicant3' ? "var(--theme-color)" : "#373D4D"} />
        //     </svg>,
        //     path: '/applicant'

        // },
        // {
        //     name: 'Overview',
        //     svg: <svg xmlns="http://www.w3.org/2000/svg" width="28" height="28" viewBox="0 0 28 28" fill="none">
        //         <path fillRule="evenodd" clipRule="evenodd" d="M7.28816 13.1891L4.06896 9.96986C3.75498 9.65549 3.57861 9.22933 3.57861 8.78502C3.57861 8.3407 3.75498 7.91455 4.06896 7.60017L7.28816 4.38097C7.60254 4.06699 8.02869 3.89062 8.473 3.89062C8.91732 3.89062 9.34347 4.06699 9.65785 4.38097L12.877 7.60017C13.191 7.91455 13.3674 8.3407 13.3674 8.78502C13.3674 9.22933 13.191 9.65549 12.877 9.96986L9.65785 13.1891C9.34347 13.503 8.91732 13.6794 8.473 13.6794C8.02869 13.6794 7.60254 13.503 7.28816 13.1891ZM8.473 12.002L5.25492 8.78502L8.473 5.56693L11.6911 8.78502L8.473 12.002ZM15.1797 11.5795V7.10835C15.1797 6.66367 15.3563 6.2372 15.6708 5.92277C15.9852 5.60833 16.4117 5.43168 16.8563 5.43168H21.3274C21.7721 5.43168 22.1986 5.60833 22.513 5.92277C22.8275 6.2372 23.0041 6.66367 23.0041 7.10835V11.5795C23.0041 12.0241 22.8275 12.4506 22.513 12.765C22.1986 13.0795 21.7721 13.2561 21.3274 13.2561H16.8563C16.4117 13.2561 15.9852 13.0795 15.6708 12.765C15.3563 12.4506 15.1797 12.0241 15.1797 11.5795ZM16.8563 11.5795V7.10835H21.3274V11.5795H16.8563ZM15.1797 21.6395V17.1683C15.1797 16.7237 15.3563 16.2972 15.6708 15.9828C15.9852 15.6683 16.4117 15.4917 16.8563 15.4917H21.3274C21.7721 15.4917 22.1986 15.6683 22.513 15.9828C22.8275 16.2972 23.0041 16.7237 23.0041 17.1683V21.6395C23.0041 22.0841 22.8275 22.5106 22.513 22.825C22.1986 23.1395 21.7721 23.3161 21.3274 23.3161H16.8563C16.4117 23.3161 15.9852 23.1395 15.6708 22.825C15.3563 22.5106 15.1797 22.0841 15.1797 21.6395ZM16.8563 21.6395V17.1683H21.3274V21.6395H16.8563ZM5.11967 17.1683V21.6395C5.11967 22.0841 5.29632 22.5106 5.61076 22.825C5.92519 23.1395 6.35166 23.3161 6.79634 23.3161H11.2674C11.7121 23.3161 12.1386 23.1395 12.453 22.825C12.7675 22.5106 12.9441 22.0841 12.9441 21.6395V17.1683C12.9441 16.7237 12.7675 16.2972 12.453 15.9828C12.1386 15.6683 11.7121 15.4917 11.2674 15.4917H6.79634C6.35166 15.4917 5.92519 15.6683 5.61076 15.9828C5.29632 16.2972 5.11967 16.7237 5.11967 17.1683ZM6.79634 17.1683V21.6395H11.2674V17.1683H6.79634Z" fill="#373D4D" />
        //     </svg>,
        //     path: '/Overview'

        // },
        {

            name: 'Client lists',
            svg: <svg xmlns="http://www.w3.org/2000/svg" width="28" height="28" viewBox="0 0 28 28" fill="none">
                <path d="M9.59131 10.5165H16.298V8.83984H9.59131V10.5165ZM18.5335 14.9876H9.59131V13.311H18.5335V14.9876ZM9.59131 19.4587H18.5335V17.7821H9.59131V19.4587Z" fill="#373D4D" />
                <path fillRule="evenodd" clipRule="evenodd" d="M5.12012 6.3254C5.12012 5.73249 5.35565 5.16387 5.7749 4.74462C6.19414 4.32537 6.76277 4.08984 7.35567 4.08984H20.769C21.3619 4.08984 21.9305 4.32537 22.3498 4.74462C22.769 5.16387 23.0046 5.73249 23.0046 6.3254V21.9743C23.0046 22.5672 22.769 23.1358 22.3498 23.5551C21.9305 23.9743 21.3619 24.2098 20.769 24.2098H7.35567C6.76277 24.2098 6.19414 23.9743 5.7749 23.5551C5.35565 23.1358 5.12012 22.5672 5.12012 21.9743V6.3254ZM7.35567 5.76651H20.769C20.9172 5.76651 21.0594 5.82539 21.1642 5.93021C21.269 6.03502 21.3279 6.17717 21.3279 6.3254V21.9743C21.3279 22.1225 21.269 22.2647 21.1642 22.3695C21.0594 22.4743 20.9172 22.5332 20.769 22.5332H7.35567C7.20745 22.5332 7.06529 22.4743 6.96048 22.3695C6.85567 22.2647 6.79678 22.1225 6.79678 21.9743V6.3254C6.79678 6.17717 6.85567 6.03502 6.96048 5.93021C7.06529 5.82539 7.20745 5.76651 7.35567 5.76651Z" fill="#373D4D" />
            </svg>,
            path: '/clientList'

        },
        {
            name: "Compliance Monitor",
            svg: <AssuredWorkload />,
            path: '/compliance'
        },
        // {
        //     name: 'Statistics',
        //     svg: <svg xmlns="http://www.w3.org/2000/svg" width="28" height="28" viewBox="0 0 28 28" fill="none">
        //         <path d="M20.8027 11.1614L19.6178 9.97656L14.6214 14.973L11.268 11.6197L7.32227 15.5655L8.50711 16.7503L11.268 13.9894L14.6214 17.3427L20.8027 11.1614Z" fill="#373D4D" />
        //         <path fillRule="evenodd" clipRule="evenodd" d="M4.00195 7.21602C4.00195 6.62312 4.23748 6.0545 4.65673 5.63525C5.07598 5.216 5.6446 4.98047 6.23751 4.98047H21.8864C22.4793 4.98047 23.0479 5.216 23.4672 5.63525C23.8864 6.0545 24.122 6.62312 24.122 7.21602V19.5116C24.122 20.1045 23.8864 20.6731 23.4672 21.0924C23.0479 21.5116 22.4793 21.7471 21.8864 21.7471H6.23751C5.6446 21.7471 5.07598 21.5116 4.65673 21.0924C4.23748 20.6731 4.00195 20.1045 4.00195 19.5116V7.21602ZM6.23751 6.65714H21.8864C22.0346 6.65714 22.1768 6.71602 22.2816 6.82083C22.3864 6.92564 22.4453 7.0678 22.4453 7.21602V19.5116C22.4453 19.6598 22.3864 19.802 22.2816 19.9068C22.1768 20.0116 22.0346 20.0705 21.8864 20.0705H6.23751C6.08928 20.0705 5.94713 20.0116 5.84231 19.9068C5.7375 19.802 5.67862 19.6598 5.67862 19.5116V7.21602C5.67862 7.0678 5.7375 6.92564 5.84231 6.82083C5.94713 6.71602 6.08928 6.65714 6.23751 6.65714Z" fill="#373D4D" />
        //     </svg>,
        //     path: '/statistics'

        // },

        // {
        //     name: 'Overview',
        //     svg: <svg xmlns="http://www.w3.org/2000/svg" width="28" height="28" viewBox="0 0 28 28" fill="none">
        //         <path d="M8.47363 17.8876H12.9447V16.2109H8.47363V17.8876Z" fill="#373D4D" />
        //         <path fillRule="evenodd" clipRule="evenodd" d="M6.238 5.87109C5.64509 5.87109 5.07647 6.10662 4.65722 6.52587C4.23797 6.94512 4.00244 7.51374 4.00244 8.10665V19.2844C4.00244 19.8773 4.23797 20.446 4.65722 20.8652C5.07647 21.2845 5.64509 21.52 6.238 21.52H21.8869C22.4798 21.52 23.0484 21.2845 23.4677 20.8652C23.8869 20.446 24.1224 19.8773 24.1224 19.2844V8.10665C24.1224 7.51374 23.8869 6.94512 23.4677 6.52587C23.0484 6.10662 22.4798 5.87109 21.8869 5.87109H6.238ZM21.8869 7.54776H6.238C6.08977 7.54776 5.94762 7.60664 5.8428 7.71146C5.73799 7.81627 5.67911 7.95842 5.67911 8.10665V10.6216H22.4458V8.10665C22.4458 7.95842 22.3869 7.81627 22.2821 7.71146C22.1773 7.60664 22.0351 7.54776 21.8869 7.54776ZM5.67911 19.2844V12.2983H22.4458V19.2844C22.4458 19.4327 22.3869 19.5748 22.2821 19.6796C22.1773 19.7844 22.0351 19.8433 21.8869 19.8433H6.238C6.08977 19.8433 5.94762 19.7844 5.8428 19.6796C5.73799 19.5748 5.67911 19.4327 5.67911 19.2844Z" fill="#373D4D" />
        //     </svg>,
        //     path: '/overviewBusniess'
        // },
        {
            name: 'KYB',
            svg: <img width="28" height="28" src="https://img.icons8.com/external-outline-lafs/28/external-ic_verify_account-crypto-security-outline-lafs.png" alt="external-ic_verify_account-crypto-security-outline-lafs" />,
            path: '/kyb'
        },

        // {
        //     name: 'Settings',
        //     svg: <svg xmlns="http://www.w3.org/2000/svg" width="28" height="27" viewBox="0 0 28 27" fill="none">
        //         <path fillRule="evenodd" clipRule="evenodd" d="M17.9743 13.4669C17.9743 13.9807 17.8732 14.4894 17.6765 14.9641C17.4799 15.4387 17.1918 15.87 16.8285 16.2333C16.4652 16.5966 16.0339 16.8847 15.5593 17.0813C15.0846 17.2779 14.5759 17.3791 14.0621 17.3791C13.5484 17.3791 13.0396 17.2779 12.565 17.0813C12.0903 16.8847 11.659 16.5966 11.2958 16.2333C10.9325 15.87 10.6443 15.4387 10.4477 14.9641C10.2511 14.4894 10.1499 13.9807 10.1499 13.4669C10.1499 12.4293 10.5621 11.4342 11.2958 10.7006C12.0294 9.96687 13.0245 9.55469 14.0621 9.55469C15.0997 9.55469 16.0948 9.96687 16.8285 10.7006C17.5622 11.4342 17.9743 12.4293 17.9743 13.4669ZM16.2977 13.4669C16.2977 14.0598 16.0621 14.6284 15.6429 15.0477C15.2237 15.4669 14.655 15.7025 14.0621 15.7025C13.4692 15.7025 12.9006 15.4669 12.4813 15.0477C12.0621 14.6284 11.8266 14.0598 11.8266 13.4669C11.8266 12.874 12.0621 12.3054 12.4813 11.8861C12.9006 11.4669 13.4692 11.2314 14.0621 11.2314C14.655 11.2314 15.2237 11.4669 15.6429 11.8861C16.0621 12.3054 16.2977 12.874 16.2977 13.4669Z" fill="#373D4D" />
        //         <path fillRule="evenodd" clipRule="evenodd" d="M13.0584 3.12891C11.7205 3.12891 10.6329 4.21203 10.6329 5.55113V6.63426L9.85936 7.08137L8.92713 6.5426C8.36991 6.22097 7.70777 6.13378 7.08628 6.30021C6.46479 6.46664 5.93484 6.87306 5.61292 7.43012L4.60692 9.17385C4.28622 9.72971 4.19944 10.3902 4.36566 11.01C4.53189 11.6299 4.93751 12.1583 5.49332 12.4791L6.51049 13.0671V13.8685L5.49332 14.4576C4.93732 14.7782 4.53146 15.3066 4.36502 15.9264C4.19858 16.5463 4.28519 17.2069 4.6058 17.7629L5.6118 19.5066C5.7712 19.7826 5.9834 20.0244 6.23628 20.2184C6.48916 20.4124 6.77778 20.5546 7.08564 20.637C7.3935 20.7194 7.71458 20.7404 8.03055 20.6987C8.34651 20.657 8.65117 20.5535 8.92713 20.3941L9.99237 19.7793L10.634 20.1482V21.3856C10.634 22.7247 11.7205 23.8078 13.0596 23.8078H15.066C16.4039 23.8078 17.4915 22.7247 17.4915 21.3856V20.1817L18.16 19.795L19.1973 20.3941C19.4732 20.5537 19.7779 20.6573 20.0939 20.6991C20.4099 20.7408 20.731 20.7199 21.0389 20.6375C21.3468 20.555 21.6354 20.4127 21.8883 20.2187C22.1412 20.0247 22.3533 19.7827 22.5126 19.5066L23.5186 17.7629C23.8392 17.2069 23.9258 16.5463 23.7594 15.9264C23.5929 15.3066 23.1871 14.7782 22.6311 14.4576L21.6698 13.902V13.0347L22.6311 12.4791C23.1871 12.1585 23.5929 11.6301 23.7594 11.0103C23.9258 10.3904 23.8392 9.72985 23.5186 9.17385L22.5126 7.43012C22.3532 7.15414 22.141 6.91226 21.8881 6.7183C21.6352 6.52434 21.3466 6.38209 21.0388 6.29967C20.7309 6.21726 20.4098 6.19629 20.0939 6.23798C19.7779 6.27966 19.4732 6.38317 19.1973 6.5426L18.293 7.0646L17.4904 6.60072V5.55001C17.4901 5.23178 17.4272 4.91671 17.3051 4.62281C17.183 4.32891 17.0043 4.06193 16.7791 3.83711C16.5538 3.61229 16.2865 3.43403 15.9924 3.31252C15.6983 3.191 15.3831 3.12861 15.0648 3.12891H13.0584ZM12.3095 5.55113C12.3095 5.14091 12.6437 4.80557 13.0584 4.80557H15.066C15.4807 4.80557 15.8149 5.14091 15.8149 5.55113V6.78069C15.8149 7.26916 16.0753 7.71962 16.4967 7.9633L17.6089 8.60602C18.0325 8.84969 18.5545 8.84969 18.9771 8.60602L20.0356 7.99459C20.2076 7.8952 20.412 7.86809 20.6039 7.91922C20.7959 7.97036 20.9597 8.09555 21.0595 8.26733L22.0655 10.0111C22.1145 10.0957 22.1464 10.1892 22.1593 10.2862C22.1721 10.3832 22.1657 10.4818 22.1403 10.5763C22.115 10.6708 22.0712 10.7594 22.0116 10.8369C21.9519 10.9145 21.8776 10.9795 21.7928 11.0282L20.675 11.6721C20.4674 11.7922 20.2951 11.9648 20.1754 12.1726C20.0558 12.3804 19.9929 12.616 19.9931 12.8558V14.0809C19.9931 14.5694 20.2536 15.0198 20.675 15.2646L21.7928 15.9096C22.1504 16.1152 22.2712 16.5691 22.0666 16.9256L21.0606 18.6694C20.9608 18.8415 20.7968 18.9669 20.6046 19.018C20.4124 19.0692 20.2077 19.0419 20.0356 18.9421L18.8441 18.2547C18.6361 18.1346 18.4001 18.0714 18.16 18.0714C17.9198 18.0714 17.6839 18.1346 17.4759 18.2547L16.4967 18.8192C16.2892 18.9392 16.1169 19.1119 15.9972 19.3197C15.8775 19.5274 15.8146 19.7631 15.8149 20.0029V21.3856C15.8147 21.4837 15.7952 21.5809 15.7575 21.6715C15.7198 21.7621 15.6646 21.8444 15.595 21.9136C15.5254 21.9829 15.4429 22.0377 15.3521 22.075C15.2614 22.1124 15.1641 22.1314 15.066 22.1311H13.0584C12.6437 22.1311 12.3095 21.7958 12.3095 21.3856V19.9693C12.3095 19.4809 12.0491 19.0304 11.6277 18.7867L10.6776 18.2379C10.4694 18.1176 10.2333 18.0543 9.99293 18.0543C9.75255 18.0543 9.51641 18.1176 9.30829 18.2379L8.08991 18.9421C7.91782 19.0419 7.71315 19.0692 7.52093 19.018C7.32871 18.9669 7.16467 18.8415 7.06491 18.6694L6.05891 16.9256C6.00985 16.841 5.97799 16.7475 5.96515 16.6505C5.95231 16.5535 5.95874 16.4549 5.98408 16.3604C6.00942 16.2659 6.05316 16.1773 6.11281 16.0998C6.17245 16.0222 6.24682 15.9572 6.33165 15.9085L7.50532 15.2311C7.71286 15.1113 7.88516 14.9389 8.00487 14.7312C8.12457 14.5236 8.18744 14.2881 8.18716 14.0485V12.8882C8.18716 12.3998 7.92784 11.9493 7.50532 11.7056L6.33165 11.0271C6.24688 10.9785 6.17253 10.9136 6.11287 10.8361C6.05322 10.7587 6.00941 10.6703 5.98398 10.5759C5.95854 10.4815 5.95197 10.383 5.96463 10.2861C5.9773 10.1892 6.00896 10.0957 6.05779 10.0111L7.06379 8.26733C7.16355 8.09525 7.32759 7.96983 7.51981 7.91869C7.71204 7.86754 7.9167 7.89484 8.0888 7.99459L9.17528 8.62167C9.59891 8.86646 10.1198 8.86646 10.5434 8.62167L11.6277 7.99571C12.0491 7.75204 12.3095 7.30269 12.3095 6.8131V5.55113Z" fill="#373D4D" />
        //     </svg>,
        //     path: '/settings'
        // },
        // {
        //     name: 'Integration',
        //     svg: <svg xmlns="http://www.w3.org/2000/svg" width="28" height="28" viewBox="0 0 28 28" fill="none">
        //         <path d="M7.41162 13.5682L11.8827 10.2148L12.8887 11.5562L9.31184 14.2388L12.8887 16.9215L11.8827 18.2628L7.41162 14.9095V13.5682ZM16.2421 10.2148L20.7132 13.5682V14.9095L16.2421 18.2628L15.2361 16.9215L18.813 14.2388L15.2361 11.5562L16.2421 10.2148Z" fill="#373D4D" />
        //         <path fillRule="evenodd" clipRule="evenodd" d="M6.238 5.30078C5.64509 5.30078 5.07647 5.53631 4.65722 5.95556C4.23797 6.37481 4.00244 6.94343 4.00244 7.53634V20.9497C4.00244 21.5426 4.23797 22.1112 4.65722 22.5304C5.07647 22.9497 5.64509 23.1852 6.238 23.1852H21.8869C22.4798 23.1852 23.0484 22.9497 23.4677 22.5304C23.8869 22.1112 24.1224 21.5426 24.1224 20.9497V7.53634C24.1224 6.94343 23.8869 6.37481 23.4677 5.95556C23.0484 5.53631 22.4798 5.30078 21.8869 5.30078H6.238ZM21.8869 6.97745H6.238C6.08977 6.97745 5.94762 7.03633 5.8428 7.14114C5.73799 7.24595 5.67911 7.38811 5.67911 7.53634V20.9497C5.67911 21.0979 5.73799 21.2401 5.8428 21.3449C5.94762 21.4497 6.08977 21.5086 6.238 21.5086H21.8869C22.0351 21.5086 22.1773 21.4497 22.2821 21.3449C22.3869 21.2401 22.4458 21.0979 22.4458 20.9497V7.53634C22.4458 7.38811 22.3869 7.24595 22.2821 7.14114C22.1773 7.03633 22.0351 6.97745 21.8869 6.97745Z" fill="#373D4D" />
        //     </svg>,
        //     path: '/integration'
        // },
        {
            name: 'API-DOC',
            svg: <img width="28" height="26" src="https://img.icons8.com/ios/28/api-settings.png" alt="api-settings" />,
            path: '/apidoc'
        },
        // {
        //     name: 'Re-Applicants',
        //     svg: <svg xmlns="http://www.w3.org/2000/svg" width="28" height="28" viewBox="0 0 28 28" fill="none">
        //         <path d="M13.2236 16.8107V12.8984H14.9003V16.8107H13.2236ZM13.2236 17.9284V19.6051H14.9003V17.9284H13.2236Z" fill="#373D4D" />
        //         <path fillRule="evenodd" clipRule="evenodd" d="M4.26797 20.4656L12.5954 5.47622C12.7406 5.21469 12.9531 4.99677 13.2108 4.84503C13.4686 4.6933 13.7623 4.61328 14.0614 4.61328C14.3605 4.61328 14.6542 4.6933 14.9119 4.84503C15.1697 4.99677 15.3822 5.21469 15.5273 5.47622L23.8559 20.4656C23.9978 20.7208 24.0706 21.0087 24.0671 21.3007C24.0636 21.5927 23.9838 21.8788 23.8358 22.1305C23.6877 22.3822 23.4765 22.5909 23.223 22.7359C22.9695 22.8809 22.6825 22.9572 22.3905 22.9571H5.73338C5.44134 22.9572 5.15437 22.8809 4.90087 22.7359C4.64737 22.5909 4.43613 22.3822 4.28808 22.1305C4.14003 21.8788 4.06029 21.5927 4.05676 21.3007C4.05324 21.0087 4.12604 20.7208 4.26797 20.4656ZM14.0619 6.29108L5.73449 21.2805H22.3894L14.0619 6.29108Z" fill="#373D4D" />
        //     </svg>,
        //     path: '/reApplicants'
        // },
        {
            name: 'Support',
            svg: <img width="30" height="30" src="https://img.icons8.com/ios-filled/30/online-support.png" alt="online-support" />,
            path: '/supportbusiness'
        },
        {
            name: 'Subscription',
            svg: <img width="25" height="25" src="https://img.icons8.com/ios/25/price-tag-usd--v1.png" alt="price-tag-usd--v1" />,
            path: '/pricing'
        },
        {
            name: 'Sub Admin',
            svg: <svg width="26" height="26" viewBox="0 0 26 26" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M23.7023 10.1843L22.1266 9.94836L21.6537 8.81889L22.5995 7.53249C23.1514 6.79694 23.0724 5.74647 22.4159 5.08993L20.8669 3.5409C20.2103 2.88436 19.1598 2.80536 18.4243 3.35727L17.1379 4.30312L16.0084 3.8302L15.7725 2.25449C15.6412 1.33533 14.8533 0.6521 13.9075 0.6521H11.7019C10.7827 0.6521 9.9682 1.33533 9.83689 2.25449L9.60095 3.8302L8.47148 4.30312L7.18507 3.35727C6.44953 2.80536 5.39906 2.88435 4.74252 3.5409L3.19349 5.08993C2.53695 5.74647 2.45795 6.79694 3.00986 7.53249L3.95571 8.81889L3.48278 9.94836L1.90708 10.1843C0.987914 10.3156 0.304688 11.1035 0.304688 12.0493V14.2549C0.304688 15.174 0.987914 15.9886 1.90708 16.1199L3.48278 16.3558L3.95571 17.4853L3.00986 18.7717C2.45794 19.5073 2.53694 20.5577 3.19349 21.2143L4.74252 22.7633C5.39906 23.4198 6.44953 23.4988 7.18507 22.9469L8.47148 22.0011L9.60095 22.474L9.83689 24.0497C9.9682 24.9689 10.7561 25.6521 11.7019 25.6521H13.9075C14.8266 25.6521 15.6412 24.9689 15.7725 24.0497L16.0084 22.474L17.1379 22.0011L18.4243 22.9469C19.1598 23.4988 20.2103 23.4198 20.8669 22.7633L22.4159 21.2143C23.0724 20.5577 23.1514 19.5073 22.5995 18.7717L21.6537 17.4853L22.1266 16.3558L23.7023 16.1199C24.6215 15.9886 25.3047 15.2007 25.3047 14.2549V12.0493C25.3047 11.1302 24.6215 10.3156 23.7023 10.1843ZM24.3065 14.2549C24.3065 14.6755 23.9916 15.0694 23.5454 15.1217L21.6803 15.3844C21.4967 15.411 21.3654 15.5157 21.2864 15.6737L20.6299 17.354C20.5509 17.512 20.5776 17.6956 20.6822 17.8525L21.8117 19.3493C22.0743 19.6909 22.022 20.1894 21.7327 20.5044L20.1836 22.0534C19.8687 22.3683 19.3958 22.395 19.0285 22.1324L17.5318 21.0029C17.4005 20.8983 17.2169 20.8716 17.0333 20.9506L15.3786 21.6338C15.2206 21.7128 15.0893 21.8441 15.0636 22.0277L14.801 23.8927C14.7487 24.3134 14.3548 24.6539 13.9342 24.6539H11.7286C11.308 24.6539 10.9141 24.339 10.8618 23.8927L10.5991 22.0277C10.5725 21.8441 10.4678 21.7128 10.2842 21.6338L8.62848 20.9516C8.57617 20.9249 8.49718 20.9249 8.44486 20.9249C8.34022 20.9249 8.23456 20.9516 8.15556 21.0296L6.65884 22.159C6.31723 22.4217 5.81868 22.395 5.50375 22.08L3.95472 20.531C3.63979 20.2161 3.61311 19.7432 3.87573 19.3759L5.0052 17.8792C5.10983 17.7479 5.13651 17.5643 5.05752 17.3807L4.37429 15.726C4.2953 15.568 4.16399 15.4367 3.98036 15.4367L2.11535 15.174C1.69475 15.1217 1.35418 14.7278 1.35418 14.3072V12.1016C1.35418 11.681 1.66911 11.2871 2.11535 11.2348L3.98036 10.9721C4.16399 10.9455 4.29529 10.8408 4.37429 10.6572L5.05752 9.00252C5.13651 8.84453 5.10983 8.6609 5.0052 8.50396L3.87573 7.00725C3.61311 6.66564 3.66543 6.16708 3.95472 5.85215L5.50375 4.30312C5.81868 3.98819 6.2916 3.96151 6.65884 4.22413L8.15556 5.3536C8.28687 5.45824 8.47049 5.48491 8.65411 5.40592L10.3088 4.72269C10.4668 4.6437 10.5981 4.51239 10.6237 4.32877L10.8864 2.46376C10.9387 2.04315 11.3326 1.70259 11.7532 1.70259H13.9588C14.3794 1.70259 14.7733 2.01752 14.8256 2.46376L15.0883 4.32877C15.1149 4.51239 15.2196 4.6437 15.4032 4.72269L17.0579 5.40592C17.2159 5.48491 17.3995 5.45824 17.5564 5.3536L19.0532 4.22413C19.3948 3.96152 19.8933 3.98819 20.2082 4.30312L21.7573 5.85215C22.0722 6.16708 22.0989 6.64 21.8363 7.00725L20.7068 8.50396C20.6022 8.63527 20.5755 8.81889 20.6545 9.00252L21.3377 10.6572C21.4167 10.8152 21.548 10.9465 21.7316 10.9721L23.5966 11.2348C24.0172 11.2871 24.3578 11.681 24.3578 12.1016L24.3588 14.2549L24.3065 14.2549Z" fill="black" />
                <path d="M16.0087 14.0981C15.6671 13.7565 15.2998 13.5205 14.8792 13.3102C15.3778 12.785 15.6937 12.1018 15.6937 11.3139C15.6937 9.73821 14.4073 8.4519 12.8317 8.4519C11.2561 8.4519 9.96973 9.73831 9.96973 11.3139C9.96973 12.0751 10.2847 12.785 10.7843 13.3102C9.89178 13.7832 9.12956 14.5187 8.71 15.4902C8.60536 15.7528 8.71 16.0421 8.97262 16.1467C9.05161 16.1734 9.10393 16.199 9.18292 16.199C9.36655 16.199 9.55016 16.0944 9.62916 15.9097C10.0231 14.9906 10.8109 14.3073 11.7301 13.9924C12.0717 14.1237 12.439 14.2284 12.8329 14.2284C13.2268 14.2284 13.5941 14.1494 13.9357 14.0181C14.4609 14.176 14.9338 14.4643 15.3278 14.8582C15.6427 15.1732 15.8797 15.5415 16.0633 15.9354C16.1679 16.1713 16.4572 16.3026 16.7198 16.198C16.9558 16.0934 17.0871 15.8041 16.9825 15.5415C16.7434 14.9639 16.4026 14.492 16.0087 14.0981ZM12.8305 9.42322C13.8543 9.42322 14.6955 10.2634 14.6955 11.2882C14.6955 12.312 13.8553 13.1532 12.8305 13.1532C11.8067 13.1532 10.9398 12.3131 10.9398 11.2882C10.9398 10.2634 11.8067 9.42322 12.8305 9.42322Z" fill="black" />
                <path d="M12.8304 6.11377C8.94341 6.11377 5.79199 9.26519 5.79199 13.1522C5.79199 17.0392 8.94341 20.1906 12.8304 20.1906C16.7174 20.1906 19.8688 17.0392 19.8688 13.1522C19.8688 9.26519 16.7174 6.11377 12.8304 6.11377ZM12.8304 19.1924C9.49543 19.1924 6.7902 16.4872 6.7902 13.1522C6.7902 9.81721 9.49543 7.11198 12.8304 7.11198C16.1654 7.11198 18.8706 9.81721 18.8706 13.1522C18.8706 16.4872 16.1654 19.1924 12.8304 19.1924Z" fill="black" />
            </svg>,
            path: '/subadmin'

        },
        {
            name: 'History',
            svg: <svg xmlns="http://www.w3.org/2000/svg" width="28" height="28" viewBox="0 0 28 28" fill="none">
                <path d="M14 2.33325C7.76358 2.33325 2.83337 7.26346 2.83337 13.4999C2.83337 19.7363 7.76358 24.6666 14 24.6666C20.2364 24.6666 25.1667 19.7363 25.1667 13.4999C25.1667 7.26346 20.2364 2.33325 14 2.33325ZM14 22.9999C8.96104 22.9999 4.83337 18.8723 4.83337 13.8333C4.83337 8.79425 8.96104 4.66659 14 4.66659C19.039 4.66659 23.1667 8.79425 23.1667 13.8333C23.1667 18.8723 19.039 22.9999 14 22.9999ZM14.75 8.16659H13.25V14.4166L18.75 17.4166L19.5 16.0833L14.75 13.4166V8.16659Z" fill="#373D4D" />
            </svg>,
            path: '/historyList'

        },
        {

            name: 'Suspended Users',
            svg: <svg width="26" height="22" viewBox="0 0 26 22" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M19.6737 10.2787C17.3333 10.2787 15.3406 11.7629 14.5831 13.8316L13.396 13.3771C13.0629 13.2485 12.8477 12.9369 12.8477 12.5837V11.2176C13.7268 10.6593 14.4109 9.81041 14.7501 8.78131C15.4703 8.69189 16.0292 8.08034 16.0292 7.34183C16.0292 6.68557 15.5878 6.12921 14.9842 5.95093V5.26017C14.9842 5.13874 14.9784 5.01565 14.9667 4.88622C15.4875 4.73499 15.8053 4.54319 15.8331 4.52608C15.8622 4.50786 15.8875 4.48578 15.9106 4.46205C15.9164 4.45598 15.9214 4.44963 15.9272 4.44328C15.9445 4.42341 15.9595 4.40216 15.9722 4.37953C15.9764 4.37264 15.9806 4.36601 15.9842 4.35884C15.9992 4.32876 16.0114 4.29757 16.0186 4.26528C16.0258 4.23272 16.0278 4.19905 16.0272 4.16538C16.027 4.16179 16.0283 4.15848 16.0281 4.15489C16.0278 4.15048 16.0261 4.14689 16.0258 4.14275C16.0233 4.11405 16.0183 4.08562 16.0097 4.05747C16.0081 4.05223 16.0072 4.04699 16.0056 4.04174C15.9956 4.01221 15.9828 3.98351 15.9653 3.95564C15.9639 3.95371 15.9622 3.95205 15.9606 3.94984C15.9584 3.94626 15.9553 3.9435 15.9531 3.93991C15.9356 3.91535 15.9167 3.89355 15.8956 3.87395C15.8892 3.86816 15.8825 3.86264 15.8761 3.85712C15.8545 3.83945 15.8317 3.824 15.8072 3.81131C15.8028 3.80882 15.7997 3.80551 15.7953 3.8033C15.785 3.79806 14.7287 3.27426 13.8262 2.22142C13.8262 2.22142 13.7776 2.16761 13.7123 2.10386C13.6535 2.04038 13.5923 1.98271 13.5301 1.92392L13.5135 1.90847C13.4835 1.87922 13.4518 1.85051 13.4193 1.82126L13.3629 1.76965C13.3551 1.76248 13.3299 1.74095 13.3218 1.73433C13.3032 1.7186 13.2849 1.7037 13.2837 1.7037C13.1249 1.56985 12.9868 1.46967 12.8613 1.39764C12.8571 1.39516 12.8357 1.38302 12.8315 1.38081C12.8185 1.37308 12.8052 1.36563 12.791 1.3579C12.5693 1.22047 12.3477 1.10649 12.1419 1.02287C12.0721 0.992238 11.9571 0.953601 11.9549 0.953049C11.4377 0.763732 10.9016 0.667969 10.3611 0.667969C7.81288 0.667969 5.73964 2.72811 5.73964 5.26044V5.95645C5.13355 6.13307 4.68968 6.69026 4.68968 7.34846C4.68968 8.09082 5.25299 8.70514 5.97713 8.79069C6.31656 9.81317 6.99708 10.6571 7.87093 11.214V12.5839C7.87093 12.9372 7.65594 13.2488 7.32401 13.3771L3.31058 14.9132C1.41927 15.4728 0.0996094 17.2305 0.0996094 19.1935V21.0552H19.2657V21.0348C19.4013 21.0447 19.5368 21.0552 19.6749 21.0552C21.1215 21.0552 22.4831 20.4942 23.5088 19.4753C24.5349 18.4564 25.0999 17.1036 25.0996 15.6666C25.0993 12.6957 22.6658 10.2787 19.6737 10.2787ZM6.69348 8.27241C6.64626 8.08724 6.47877 7.96001 6.28989 7.96001C6.27656 7.96001 6.26322 7.96056 6.24961 7.96194L6.19739 7.96774C6.18239 7.9694 6.1674 7.97243 6.15156 7.97243C5.80519 7.97243 5.52353 7.69232 5.52353 7.3479C5.52353 7.00873 5.79852 6.73221 6.13879 6.72558C6.38239 6.73193 6.57321 6.54648 6.57349 6.3119V5.25961C6.57349 3.18402 8.27286 1.49506 10.3617 1.49506C10.8039 1.49506 11.2433 1.57399 11.681 1.73378C11.6841 1.73461 11.7602 1.75944 11.816 1.78373C11.9924 1.85548 12.176 1.95042 12.3616 2.06633C12.3721 2.07295 12.3999 2.08868 12.411 2.09448L12.4446 2.11324C12.5252 2.1596 12.6263 2.23384 12.7449 2.33374C12.7513 2.33926 12.7749 2.35858 12.7815 2.36355L12.8588 2.43254C12.8838 2.45517 12.9085 2.47725 12.936 2.50402L12.9574 2.52417C13.0063 2.56998 13.0546 2.61496 13.1126 2.67706C13.1649 2.72894 13.2001 2.76702 13.2004 2.76702C13.2004 2.76702 13.2004 2.76702 13.2001 2.76675C13.7129 3.36478 14.2656 3.80744 14.6926 4.10163C14.609 4.12481 14.5192 4.14689 14.424 4.16621C14.4209 4.16676 14.4181 4.16814 14.4154 4.16897C13.9312 4.26501 13.2968 4.29426 12.5771 4.08673C12.3555 4.02298 12.1249 4.14937 12.061 4.36877C11.9969 4.58845 12.1241 4.81806 12.3449 4.88153C12.8193 5.01841 13.2643 5.07057 13.6671 5.07057C13.8326 5.07057 13.9904 5.06147 14.1409 5.04601C14.1457 5.11832 14.1507 5.19062 14.1507 5.25906V6.30362C14.1507 6.5324 14.3373 6.71758 14.5673 6.71758C14.9137 6.71758 15.1956 6.99714 15.1956 7.34073C15.1956 7.68432 14.9137 7.9636 14.5673 7.9636C14.5426 7.9636 14.5184 7.95919 14.4951 7.95587C14.2809 7.92662 14.0845 8.05964 14.0326 8.26496C13.7798 9.26454 13.139 10.0817 12.296 10.5809L12.2252 10.6209C11.0863 11.2631 9.64085 11.2651 8.49424 10.6165L8.36952 10.5459C7.55761 10.0458 6.94153 9.24577 6.69348 8.27241ZM0.932906 20.2273V19.1935C0.932906 17.5898 2.01452 16.1542 3.56307 15.7024L7.62539 14.149C8.28119 13.8956 8.70478 13.2811 8.70478 12.5837V11.6324C9.22226 11.8305 9.78112 11.9407 10.3617 11.9407C10.7927 11.9407 11.2113 11.8783 11.6105 11.7671C11.6119 11.7665 11.6135 11.7662 11.6152 11.7657C11.7508 11.7276 11.8838 11.684 12.0144 11.6343V12.5834C12.0144 13.2808 12.438 13.8954 13.0951 14.149L14.3554 14.6311C14.2895 14.9664 14.2526 15.3119 14.2526 15.666C14.2526 17.5876 15.2731 19.2727 16.8003 20.227L0.932906 20.2273ZM22.9197 18.8897C22.0511 19.7524 20.899 20.2273 19.6746 20.2273C17.1441 20.2273 15.0856 18.1812 15.0856 15.6663C15.0856 13.1522 17.1439 11.1069 19.6746 11.1069C22.2061 11.1069 24.2658 13.1525 24.2658 15.6668C24.2663 16.8828 23.788 18.0272 22.9197 18.8897Z" fill="black" />
                <path d="M23.0649 14.0609L23.0755 14.0504L22.9116 13.7742L22.6385 13.3139L22.6108 13.3415C22.5235 13.2319 22.4324 13.1259 22.3355 13.0293C22.238 12.9327 22.1319 12.8428 22.0216 12.7561L22.0494 12.7285L21.5861 12.457L21.308 12.2941L21.2964 12.3057C20.7914 12.0662 20.2361 11.939 19.6714 11.939C18.6693 11.939 17.7279 12.3253 17.0213 13.0274C16.3135 13.7306 15.9238 14.6678 15.9238 15.6665C15.9238 16.224 16.0519 16.7735 16.293 17.2749L16.2813 17.2865L16.4455 17.5628L16.7185 18.0225L16.7466 17.9946C16.8341 18.1042 16.9252 18.2099 17.0221 18.3065C17.1191 18.4031 17.2254 18.4936 17.3363 18.5803L17.3085 18.6079L17.7721 18.8791L17.7732 18.8797L18.0504 19.0417L18.0618 19.0304C18.5657 19.2691 19.1198 19.3958 19.6831 19.3958C20.6856 19.3958 21.6275 19.0088 22.3347 18.3059C23.4668 17.1816 23.7471 15.4772 23.0649 14.0609ZM16.7571 15.6665C16.7571 14.8888 17.0602 14.1594 17.6104 13.6127C18.1598 13.0671 18.8915 12.7669 19.6714 12.7669C20.0103 12.7669 20.3453 12.8248 20.6611 12.9366L18.7948 14.7906L16.9282 16.6443C16.8155 16.3316 16.7571 16.0005 16.7571 15.6665ZM17.6113 17.7214C17.5146 17.6254 17.4235 17.5203 17.3393 17.4065L21.1808 13.5909L21.4291 13.3445C21.5436 13.4284 21.65 13.5186 21.7469 13.6147C21.8433 13.7107 21.9341 13.8159 22.0186 13.9298L19.9742 15.9604L17.9296 17.9913C17.8143 17.9077 17.7079 17.8175 17.6113 17.7214ZM21.7455 17.7206C21.1958 18.2668 20.4631 18.5678 19.6831 18.5678C19.3453 18.5678 19.012 18.5102 18.6973 18.3992L20.5622 16.5466L22.4288 14.6926C22.8038 15.7341 22.5541 16.9175 21.7455 17.7206Z" fill="black" />
            </svg>,
            path: '/suspenceuser'

        },
        {

            name: 'UserInvoices',
            svg: <svg width="26" height="23" viewBox="0 0 26 23" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M25.7757 1.06358C25.7343 0.815409 25.6103 0.567237 25.4035 0.401788C25.1966 0.277701 24.9071 0.236339 24.6589 0.319064C24.4935 0.401788 24.3694 0.484512 24.2867 0.567237C24.1212 0.732685 23.9558 0.898134 23.749 1.06358C23.5422 0.856772 23.3353 0.649961 23.2113 0.525874C22.8804 0.194977 22.384 0.194977 22.0118 0.525874C22.0118 0.525874 21.9704 0.567237 21.9704 0.608599L21.929 0.649961C21.7636 0.815409 21.6395 0.939496 21.474 1.10494C21.3086 0.939496 21.1018 0.732685 20.9777 0.608599C20.5641 0.194977 20.1091 0.194977 19.6955 0.608599L19.53 0.691323C19.4473 0.774047 19.3232 0.898134 19.2405 0.980858C19.1991 1.02222 19.1991 1.02222 19.1578 1.06358C18.951 0.856772 18.7855 0.691323 18.6201 0.525874C18.2478 0.194977 17.7515 0.153615 17.4206 0.525874C17.2137 0.691323 17.0483 0.898134 16.8828 1.06358C16.7174 0.898134 16.5106 0.691323 16.3451 0.525874C16.097 0.277701 15.7247 0.194977 15.3938 0.319064C15.0629 0.44315 14.8975 0.732685 14.8975 1.10494V8.75695V9.08784C14.8975 9.33602 14.8975 9.58419 14.8975 9.87372V12.5623C14.8975 13.0586 15.2697 13.4309 15.7661 13.4309C16.0142 13.4309 16.2211 13.3481 16.3865 13.1827L17.7928 11.7764C17.9583 11.6109 18.0823 11.4868 18.2064 11.3628H24.783C25.3621 11.3628 25.8584 10.8664 25.8584 10.2873V1.14631C25.7757 1.10494 25.7757 1.10494 25.7757 1.06358ZM24.8244 10.2873C24.8244 10.3701 24.783 10.4114 24.7003 10.4114H21.2259H17.9583C17.7928 10.4114 17.6687 10.4942 17.5446 10.5769L17.5033 10.6182C17.3792 10.7423 17.2137 10.9078 17.0483 11.0732L15.8074 12.3555V9.87372C15.8074 9.62555 15.8074 9.37738 15.8074 9.08784V1.39448C16.0142 1.60129 16.1797 1.76674 16.3865 1.97355C16.4279 2.01491 16.4692 2.05627 16.5106 2.09764C16.6347 2.22172 16.676 2.22172 16.8415 2.22172C17.0483 2.22172 17.1724 2.09764 17.2965 1.97355L17.3378 1.93219C17.5446 1.72538 17.7515 1.51857 17.9583 1.31176C18.1237 1.4772 18.2892 1.64265 18.4546 1.8081L18.7028 1.97355C18.8269 2.09764 18.9923 2.18036 19.1991 2.18036C19.3646 2.18036 19.53 2.09764 19.6541 1.97355C19.7368 1.89083 19.8609 1.76674 19.9436 1.68402C20.0264 1.60129 20.1505 1.4772 20.2332 1.39448L20.3159 1.31176C20.5227 1.51857 20.9363 1.93219 21.1018 2.09764C21.3086 2.30445 21.6809 2.30445 21.8877 2.09764C22.1358 1.84946 22.384 1.60129 22.6322 1.35312L22.6735 1.31176C22.7976 1.43584 23.0044 1.64265 23.2113 1.84946C23.3353 1.97355 23.4594 2.09764 23.5008 2.139C23.7076 2.34581 23.9971 2.34581 24.2039 2.139L24.4521 1.89083C24.6176 1.72538 24.7417 1.55993 24.9071 1.43584V10.2873H24.8244Z" fill="black" />
                <path d="M19.9852 9.00508H20.0679V9.4187H20.647V9.00508L20.8124 8.96372C20.8952 8.96372 21.0193 8.92236 21.102 8.881C21.7224 8.67419 22.0533 8.30193 22.136 7.72286C22.2188 7.06106 22.012 6.52335 21.5156 6.23382C21.3502 6.10973 21.1433 6.02701 20.9365 5.94428C20.8125 5.90292 20.7297 5.86156 20.647 5.8202C20.6056 5.77883 20.5229 5.77883 20.4816 5.73747C20.3161 5.65475 20.1507 5.57202 19.9852 5.4893C19.737 5.32385 19.6543 4.99295 19.7784 4.66206C19.8611 4.41388 20.0679 4.2898 20.3988 4.2898C20.7297 4.2898 20.9365 4.45524 21.0606 4.74478C21.102 4.8275 21.102 4.91023 21.102 4.99295C21.102 5.03432 21.102 5.07568 21.102 5.11704H22.136C22.1774 4.8275 22.0947 4.49661 21.9292 4.24843C21.6811 3.87617 21.3502 3.628 20.8124 3.50391H20.7297V3.00757H20.1507V3.46255L20.0679 3.50391C20.0266 3.50391 19.9438 3.54528 19.9025 3.54528C19.737 3.58664 19.5716 3.628 19.4475 3.71073C18.9925 3.91754 18.703 4.37252 18.6616 4.91023C18.6203 5.40657 18.8271 5.90292 19.2407 6.15109C19.4475 6.31654 19.6957 6.39927 19.9025 6.52335C19.9852 6.56471 20.1093 6.60608 20.192 6.64744C20.2334 6.6888 20.3161 6.6888 20.3575 6.73016H20.3988C20.5643 6.81289 20.6884 6.85425 20.8124 6.93697C21.0606 7.10242 21.1433 7.43332 21.0606 7.76422C20.9779 8.01239 20.7711 8.17784 20.4402 8.17784C20.3575 8.17784 20.2747 8.17784 20.2334 8.17784C19.8611 8.13648 19.5716 7.8883 19.5302 7.51604C19.5302 7.47468 19.5302 7.47468 19.5302 7.43332V7.30923H18.4962C18.4134 8.2192 18.9098 8.75691 19.9852 9.00508Z" fill="black" />
                <path d="M5.75658 12.1899C6.00476 12.6863 6.37702 13.1826 6.87336 13.6376C7.36971 14.0926 7.99014 14.3408 8.73466 14.3408H8.81738C9.47918 14.3408 10.0996 14.0926 10.596 13.6376C11.0923 13.1826 11.4646 12.7276 11.7127 12.1899C12.2091 11.1145 12.4986 10.0391 12.4986 8.92232V8.79823C12.4986 8.67414 12.4986 8.55006 12.4986 8.42597C12.3745 7.14374 11.63 6.23378 10.4305 5.77879C9.93416 5.57198 9.35509 5.48926 8.73466 5.48926C8.11423 5.48926 7.57652 5.61334 7.03881 5.77879C5.79795 6.23378 5.09479 7.14374 4.9707 8.42597C4.9707 8.55006 4.9707 8.67414 4.9707 8.79823V8.92232C4.9707 10.0391 5.26024 11.1145 5.75658 12.1899Z" fill="black" />
                <path d="M15.8074 17.0293C15.5592 16.8225 15.2283 16.6571 14.8561 16.533L12.333 15.5817C11.7953 15.3749 11.2576 15.3335 10.7612 15.6644L10.6371 15.7471C10.4717 15.8712 10.3889 16.0367 10.3062 16.1607C10.2649 16.2021 10.2649 16.2435 10.2235 16.2848L8.73446 18.3529L8.52765 18.0634C8.0313 17.3602 7.53496 16.6571 7.03861 15.9539C6.99725 15.9126 6.95589 15.8712 6.91452 15.7885C6.74908 15.5817 6.54226 15.4162 6.29409 15.3749L6.08728 15.3335L5.3014 15.5403L2.69558 16.533C2.32332 16.6571 1.99243 16.8225 1.70289 17.0293C0.792923 17.7325 0.834285 18.5597 0.875648 18.6011V20.6279C0.91701 20.876 0.958372 21.0828 1.0411 21.2896C1.37199 22.0755 2.07515 22.3651 2.53013 22.3651H14.9388C15.4351 22.3651 16.0969 22.0755 16.4278 21.2896C16.5105 21.0828 16.5519 20.876 16.5933 20.5451V18.6425C16.6346 18.5597 16.676 17.6911 15.8074 17.0293Z" fill="black" />
            </svg>,
            path: '/userinvoice'

        },
    ])


    const drawer = (
        <>

            <DrawerHeader className='drawhead'>
                <div className='cursor' onClick={() => { navigate('/dashboard') }} >
                    {/* {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />} */}
                    <div className="apxlogo">
                        <img src={apx} alt="apx" />
                    </div>
                </div>
            </DrawerHeader>

            <List className='listmui'>
                {routes.map((row, index) => (
                    row?.name === 'Client lists' ? usertype === 'organization' || subAdminDetails?.access?.client_lists === true ?
                        <NavLink key={index} to={row.path} className={({ isActive }) => (isActive ? "active" : "")} >
                            <ListItem key={row.id} disablePadding sx={{ display: 'block' }} className='routelist'>
                                <ListItemButton
                                    sx={{
                                        minHeight: 48,
                                        justifyContent: open ? 'initial' : 'center',
                                        px: 2.5,
                                    }}
                                    className='icobtn'
                                >
                                    <ListItemIcon
                                        sx={{
                                            minWidth: 0,
                                            mr: open ? 3 : 'auto',
                                            justifyContent: 'center',
                                        }}
                                    >
                                        {row.svg}
                                    </ListItemIcon>
                                    <ListItemText className='routetext' primary={row.name} sx={{ opacity: open ? 1 : 0 }} />
                                </ListItemButton>
                            </ListItem>
                        </NavLink> : <></>
                        :
                        row?.name === 'Statistics' ? usertype === 'organization' || subAdminDetails?.access?.statistics === true || subAdminDetails?.access?.analytics === true ?
                            <NavLink key={index} to={row.path} className={({ isActive }) => (isActive ? "active" : "")} >
                                <ListItem key={row.id} disablePadding sx={{ display: 'block' }} className='routelist'>
                                    <ListItemButton
                                        sx={{
                                            minHeight: 48,
                                            justifyContent: open ? 'initial' : 'center',
                                            px: 2.5,
                                        }}
                                        className='icobtn'
                                    >
                                        <ListItemIcon
                                            sx={{
                                                minWidth: 0,
                                                mr: open ? 3 : 'auto',
                                                justifyContent: 'center',
                                            }}
                                        >
                                            {row.svg}
                                        </ListItemIcon>
                                        <ListItemText className='routetext' primary={row.name} sx={{ opacity: open ? 1 : 0 }} />
                                    </ListItemButton>
                                </ListItem>
                            </NavLink> : <></>
                            :
                            row?.name === 'Overview' ? usertype === 'organization' || subAdminDetails?.access?.overview === true ?
                                <NavLink key={index} to={row.path} className={({ isActive }) => (isActive ? "active" : "")} >
                                    <ListItem key={row.id} disablePadding sx={{ display: 'block' }} className='routelist'>
                                        <ListItemButton
                                            sx={{
                                                minHeight: 48,
                                                justifyContent: open ? 'initial' : 'center',
                                                px: 2.5,
                                            }}
                                            className='icobtn'
                                        >
                                            <ListItemIcon
                                                sx={{
                                                    minWidth: 0,
                                                    mr: open ? 3 : 'auto',
                                                    justifyContent: 'center',
                                                }}
                                            >
                                                {row.svg}
                                            </ListItemIcon>
                                            <ListItemText className='routetext' primary={row.name} sx={{ opacity: open ? 1 : 0 }} />
                                        </ListItemButton>
                                    </ListItem>
                                </NavLink> : <></>
                                :
                                row?.name === 'KYB' ? usertype === 'organization' || subAdminDetails?.access?.kyb === true ?
                                    <>
                                        <ListItem key={row.id} disablePadding sx={{ display: 'block', maginTop: '15px !important', marginBottom: "5px !important" }} onClick={handleClickList}>
                                            <ListItemButton
                                                sx={{
                                                    minHeight: 48,
                                                    justifyContent: open ? 'initial' : 'center',
                                                    px: 2.5,
                                                }}
                                                className='icobtn'
                                            >
                                                <ListItemIcon
                                                    sx={{
                                                        minWidth: 0,
                                                        mr: open ? 3 : 'auto',
                                                        justifyContent: 'center',
                                                    }}
                                                >
                                                    {row.svg}
                                                </ListItemIcon>
                                                <ListItemText className='routetext' primary={row.name} sx={{ opacity: open ? 1 : 0 }} />
                                                {openList ? <ExpandLess /> : <ExpandMore />}
                                            </ListItemButton>
                                        </ListItem>
                                        <Collapse in={openList} timeout="auto" unmountOnExit>
                                            <NavLink key={index} to={row.path} className={({ isActive }) => (isActive ? "active" : "")} >
                                                <ListItem key={row.id} disablePadding
                                                    sx={{ display: 'block', maginTop: '15px !important', marginBottom: "5px !important" }}
                                                >
                                                    <ListItemButton
                                                        sx={{
                                                            minHeight: 48,
                                                            justifyContent: !openList ? 'initial' : 'center',
                                                            px: 2.5,
                                                        }}
                                                        className='icobtn'
                                                    >
                                                        <ListItemIcon
                                                            sx={{
                                                                minWidth: 0,
                                                                mr: 6,
                                                                justifyContent: 'center',
                                                            }}
                                                        >
                                                            {/* {row.svg} */}
                                                        </ListItemIcon>
                                                        <ListItemText className='routetext' primary={row.name} sx={{ opacity: open ? 1 : 0 }} />
                                                    </ListItemButton>
                                                </ListItem>
                                            </NavLink>
                                            <NavLink key={index} to='/kybstatus' className={({ isActive }) => (isActive ? "active" : "")} >
                                                <ListItem key={row.id} disablePadding sx={{ display: 'block', maginTop: '15px !important', marginBottom: "5px !important" }}>
                                                    <ListItemButton
                                                        sx={{
                                                            minHeight: 48,
                                                            justifyContent: !openList ? 'initial' : 'center',
                                                            px: 2.5,
                                                        }}
                                                        className='icobtn'
                                                    >
                                                        <ListItemIcon
                                                            sx={{
                                                                minWidth: 0,
                                                                mr: 6,
                                                                justifyContent: 'center',
                                                            }}
                                                        >
                                                            {/* {row.svg} */}
                                                        </ListItemIcon>
                                                        <ListItemText className='routetext' primary={'Kyb Status'} sx={{ opacity: open ? 1 : 0 }} />
                                                    </ListItemButton>
                                                </ListItem>
                                            </NavLink>
                                        </Collapse>
                                    </>
                                    : <></>
                                    :
                                    row?.name === 'Support' ? usertype === 'organization' || subAdminDetails?.access?.support === true ?
                                        <NavLink key={index} to={row.path} className={({ isActive }) => (isActive ? "active" : "")} >
                                            <ListItem key={row.id} disablePadding sx={{ display: 'block' }} className='routelist'>
                                                <ListItemButton
                                                    sx={{
                                                        minHeight: 48,
                                                        justifyContent: open ? 'initial' : 'center',
                                                        px: 2.5,
                                                    }}
                                                    className='icobtn'
                                                >
                                                    <ListItemIcon
                                                        sx={{
                                                            minWidth: 0,
                                                            mr: open ? 3 : 'auto',
                                                            justifyContent: 'center',
                                                        }}
                                                    >
                                                        {row.svg}
                                                    </ListItemIcon>
                                                    <ListItemText className='routetext' primary={row.name} sx={{ opacity: open ? 1 : 0 }} />
                                                </ListItemButton>
                                            </ListItem>
                                        </NavLink> : <></>
                                        :
                                        row?.name === 'Sub Admin' ? usertype === 'organization' ?
                                            <NavLink key={index} to={row.path} className={({ isActive }) => (isActive ? "active" : "")} >
                                                <ListItem key={row.id} disablePadding sx={{ display: 'block' }} className='routelist'>
                                                    <ListItemButton
                                                        sx={{
                                                            minHeight: 48,
                                                            justifyContent: open ? 'initial' : 'center',
                                                            px: 2.5,
                                                        }}
                                                        className='icobtn'
                                                    >
                                                        <ListItemIcon
                                                            sx={{
                                                                minWidth: 0,
                                                                mr: open ? 3 : 'auto',
                                                                justifyContent: 'center',
                                                            }}
                                                        >
                                                            {row.svg}
                                                        </ListItemIcon>
                                                        <ListItemText className='routetext' primary={row.name} sx={{ opacity: open ? 1 : 0 }} />
                                                    </ListItemButton>
                                                </ListItem>
                                            </NavLink> : <></>
                                            :
                                            row?.name === 'API-DOC' ?
                                                <>
                                                    <ListItem key={row.id} disablePadding sx={{ display: 'block', marginTop: '15px !important', marginBottom: "5px !important" }} onClick={handleClickList2}>
                                                        <ListItemButton
                                                            sx={{
                                                                minHeight: 48,
                                                                justifyContent: open ? 'initial' : 'center',
                                                                px: 2.5,
                                                            }}
                                                            className='icobtn'
                                                        >
                                                            <ListItemIcon
                                                                sx={{
                                                                    minWidth: 0,
                                                                    mr: open ? 3 : 'auto',
                                                                    justifyContent: 'center',
                                                                }}
                                                            >
                                                                {row.svg}
                                                            </ListItemIcon>
                                                            <ListItemText className='routetext' primary={row.name} sx={{ opacity: open ? 1 : 0 }} />
                                                            {openList2 ? <ExpandLess /> : <ExpandMore />}
                                                        </ListItemButton>
                                                    </ListItem>
                                                    <Collapse in={openList2} timeout="auto" unmountOnExit>

                                                        <NavLink key={index} to='/createkyc' className={({ isActive }) => (isActive ? "active" : "")} >
                                                            <ListItem key={row.id} disablePadding sx={{ display: 'block', maginTop: '15px !important', marginBottom: "5px !important" }}>
                                                                <ListItemButton
                                                                    sx={{
                                                                        minHeight: 48,
                                                                        justifyContent: open ? 'initial' : 'center',
                                                                        px: 2.5,
                                                                    }}
                                                                    className='icobtn'
                                                                >
                                                                    <ListItemIcon
                                                                        sx={{
                                                                            minWidth: 0,
                                                                            mr: 2,
                                                                            justifyContent: 'center',
                                                                        }}
                                                                    >
                                                                        {/* {row.svg} */}
                                                                    </ListItemIcon>
                                                                    <ListItemText className='routetext' primary="Create Kyc" sx={{ opacity: open ? 1 : 0 }} />
                                                                </ListItemButton>
                                                            </ListItem>
                                                        </NavLink>
                                                        <NavLink key={index} to='/checkkyc' className={({ isActive }) => (isActive ? "active" : "")} >
                                                            <ListItem key={row.id} disablePadding sx={{ display: 'block', maginTop: '15px !important', marginBottom: "5px !important" }}>
                                                                <ListItemButton
                                                                    sx={{
                                                                        minHeight: 48,
                                                                        justifyContent: open ? 'initial' : 'center',
                                                                        px: 2.5,
                                                                    }}
                                                                    className='icobtn'
                                                                >
                                                                    <ListItemIcon
                                                                        sx={{
                                                                            minWidth: 0,
                                                                            mr: 2,
                                                                            justifyContent: 'center',
                                                                        }}
                                                                    >
                                                                        {/* {row.svg} */}
                                                                    </ListItemIcon>
                                                                    <ListItemText className='routetext' primary="Check Kyc Verification" sx={{ opacity: open ? 1 : 0 }} />
                                                                </ListItemButton>
                                                            </ListItem>
                                                        </NavLink>
                                                        <NavLink key={index} to='/getkyc' className={({ isActive }) => (isActive ? "active" : "")} >
                                                            <ListItem key={row.id} disablePadding sx={{ display: 'block', maginTop: '15px !important', marginBottom: "5px !important" }}>
                                                                <ListItemButton
                                                                    sx={{
                                                                        minHeight: 48,
                                                                        justifyContent: open ? 'initial' : 'center',
                                                                        px: 2.5,
                                                                    }}
                                                                    className='icobtn'
                                                                >
                                                                    <ListItemIcon
                                                                        sx={{
                                                                            minWidth: 0,
                                                                            mr: 2,
                                                                            justifyContent: 'center',
                                                                        }}
                                                                    >
                                                                        {/* {row.svg} */}
                                                                    </ListItemIcon>
                                                                    <ListItemText className='routetext' primary="Get All Kyc Details" sx={{ opacity: open ? 1 : 0 }} />
                                                                </ListItemButton>
                                                            </ListItem>
                                                        </NavLink>

                                                        <NavLink key={index} to='/addressVerification' className={({ isActive }) => (isActive ? "active" : "")} >
                                                            <ListItem key={row.id} disablePadding sx={{ display: 'block', maginTop: '15px !important', marginBottom: "5px !important" }}>
                                                                <ListItemButton
                                                                    sx={{
                                                                        minHeight: 48,
                                                                        justifyContent: open ? 'initial' : 'center',
                                                                        px: 2.5,
                                                                    }}
                                                                    className='icobtn'
                                                                >
                                                                    <ListItemIcon
                                                                        sx={{
                                                                            minWidth: 0,
                                                                            mr: 2,
                                                                            justifyContent: 'center',
                                                                        }}
                                                                    >
                                                                        {/* {row.svg} */}
                                                                    </ListItemIcon>
                                                                    <ListItemText className='routetext' primary="Verify Address" sx={{ opacity: open ? 1 : 0 }} />
                                                                </ListItemButton>
                                                            </ListItem>
                                                        </NavLink>
                                                    </Collapse>
                                                </> :

                                                row?.name === 'Suspended Users' ? usertype === 'organization' ?
                                                    <NavLink key={index} to={row.path} className={({ isActive }) => (isActive ? "active" : "")} >
                                                        <ListItem key={row.id} disablePadding sx={{ display: 'block' }} className='routelist'>
                                                            <ListItemButton
                                                                sx={{
                                                                    minHeight: 48,
                                                                    justifyContent: open ? 'initial' : 'center',
                                                                    px: 2.5,
                                                                }}
                                                                className='icobtn'
                                                            >
                                                                <ListItemIcon
                                                                    sx={{
                                                                        minWidth: 0,
                                                                        mr: open ? 3 : 'auto',
                                                                        justifyContent: 'center',
                                                                    }}
                                                                >
                                                                    {row.svg}
                                                                </ListItemIcon>
                                                                <ListItemText className='routetext' primary={row.name} sx={{ opacity: open ? 1 : 0 }} />
                                                            </ListItemButton>
                                                        </ListItem>
                                                    </NavLink> : <></>
                                                    :
                                                    <NavLink key={index} to={row.path} className={({ isActive }) => (isActive ? "active" : "")} >
                                                        <ListItem key={row.id} disablePadding sx={{ display: 'block' }} className='routelist'>
                                                            <ListItemButton
                                                                sx={{
                                                                    minHeight: 48,
                                                                    justifyContent: open ? 'initial' : 'center',
                                                                    px: 2.5,
                                                                }}
                                                                className='icobtn'
                                                            >
                                                                <ListItemIcon
                                                                    sx={{
                                                                        minWidth: 0,
                                                                        mr: open ? 3 : 'auto',
                                                                        justifyContent: 'center',
                                                                    }}
                                                                >
                                                                    {row.svg}
                                                                </ListItemIcon>
                                                                <ListItemText className='routetext' primary={row.name} sx={{ opacity: open ? 1 : 0 }} />
                                                            </ListItemButton>
                                                        </ListItem>
                                                    </NavLink>
                ))}
            </List>

        </>
    )

    const logout = async () => {
        try {
            const { data } = await Axios.post('/users/logout', {}, {
                headers: {
                    'Authorization': `Bearer ${localStorage.getItem('Rikosta')}`
                }
            })
        } catch (error) {
            console.log("ðŸš€ ~ logout ~ error:", error)
        }
    }

    const [notiCount, setNotiCount] = useState(0)
    const [notification, setNotification] = useState([])

    const getNotification = async () => {
        try {
            const { data } = await Axios.get('/users/getNotification', {
                headers: {
                    'Authorization': `Bearer ${localStorage.getItem('Rikosta')}`
                }
            })
            if (data?.success == true) {
                setNotiCount(data?.result?.length)
                setNotification(data?.result)
            }
        } catch (error) {
            console.log("ðŸš€ ~ getNotification ~ error:", error)
        }
    }

    useEffect(() => {
        getNotification()
    }, [])

    const updateNotification = async (id) => {
        try {
            const { data } = await Axios.post('/users/updateNotification', {
                id: id
            }, {
                headers: {
                    'Authorization': `Bearer ${localStorage.getItem('Rikosta')}`
                }
            })
            getNotification()
        } catch (error) {
            console.log("ðŸš€ ~ updateNotification ~ error:", error)
        }
    }

    const seenMessage = async (id) => {
        try {
            const { data } = await Axios.post('/support/seenMessage', { id: id }, {
                headers: {
                    Authorization: window.localStorage.getItem('Rikosta')
                }
            })
            if (data.success) {
                getNotification()
            }
        } catch (error) {
            console.log('ðŸš€ ~ seenMessage Notification ~ error', error);

        }
    }

    return (
        <Box sx={{ display: 'flex' }}>
            <CssBaseline />
            <AppBar position="fixed" open={open} className='sidetoolbar' sx={{ width: !isLgup ? '100%' : 'calc(100%-200px)' }}>
                <Toolbar sx={{ justifyContent: 'space-between' }}>
                    {!isLgup ? (
                        <IconButton
                            color="inherit"
                            aria-label="open drawer"
                            edge="start"
                            onClick={open ? handleDrawerClose : handleDrawerOpen}
                            sx={{ mr: 2 }}
                        >
                            {open ? <ChevronLeftIcon sx={{ fill: '#000' }} /> : <MenuIcon sx={{ fill: '#000' }} />}
                            {/* <MenuIcon sx={{ fill: '#000' }} /> */}
                        </IconButton>
                    ) : <div
                        color="inherit"
                        aria-label="open drawer"
                        onClick={open ? handleDrawerClose : handleDrawerOpen}
                        edge="start"
                        sx={{
                            marginRight: 5,

                        }}
                    >
                        <div className="apxlogo cursor" style={{ margin: 0 }} >
                            {open ? <ChevronLeftIcon sx={{ fill: '#000' }} /> : <MenuIcon sx={{ fill: '#000' }} />}

                        </div>
                    </div>}

                    <Stack direction="row" spacing={4} sx={{ alignItems: 'center' }}>
                        {/* {mobileUp && <div className="display-1">
                            <AntSwitch defaultChecked inputProps={{ 'aria-label': 'ant design' }} />
                            <div className="prodtin">Production</div>
                        </div>} */}
                        {/* {mobileUp &&
                            usertype === 'organization' || subAdminDetails?.access?.support === true ?
                            <div className="display-1 cursor" onClick={(() => { navigate('/supportbusiness') })}>
                                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="18" viewBox="0 0 17 16" fill="none">
                                    <path d="M9.66045 12V10.4H8.06045V12H9.66045ZM11.2604 6.277C11.2604 5.004 10.1724 4 8.86045 4C7.54845 4 6.46045 5.004 6.46045 6.277H8.06045L8.06545 6.201C8.11045 5.874 8.43745 5.6 8.86045 5.6C9.31645 5.6 9.66045 5.918 9.66045 6.277C9.66045 6.441 9.57045 6.553 9.24645 6.755L9.10845 6.843C8.43845 7.291 8.06045 7.813 8.06045 8.615V9.2H9.66045V8.615L9.66445 8.559C9.68445 8.413 9.79345 8.299 10.0904 8.114L10.2264 8.026C10.8864 7.583 11.2604 7.07 11.2604 6.277Z" fill="#373D4D" />
                                    <path fillRule="evenodd" clipRule="evenodd" d="M15.8604 8C15.8604 9.85652 15.1229 11.637 13.8101 12.9497C12.4973 14.2625 10.7169 15 8.86035 15C7.00384 15 5.22336 14.2625 3.9106 12.9497C2.59785 11.637 1.86035 9.85652 1.86035 8C1.86035 6.14348 2.59785 4.36301 3.9106 3.05025C5.22336 1.7375 7.00384 1 8.86035 1C10.7169 1 12.4973 1.7375 13.8101 3.05025C15.1229 4.36301 15.8604 6.14348 15.8604 8ZM14.3604 8C14.3604 9.45869 13.7809 10.8576 12.7494 11.8891C11.718 12.9205 10.319 13.5 8.86035 13.5C7.40166 13.5 6.00271 12.9205 4.97126 11.8891C3.93981 10.8576 3.36035 9.45869 3.36035 8C3.36035 6.54131 3.93981 5.14236 4.97126 4.11091C6.00271 3.07946 7.40166 2.5 8.86035 2.5C10.319 2.5 11.718 3.07946 12.7494 4.11091C13.7809 5.14236 14.3604 6.54131 14.3604 8Z" fill="#373D4D" />
                                </svg>
                                <div className="hlp">Help</div>

                            </div> : <></>
                        } */}
                        {/* 
<div className="display-1 cursor" onClick={(() => { navigate('/pricing') })}>
                            
                            <img width="25" height="25" src="https://img.icons8.com/color/25/price-tag-usd--v1.png" alt="price-tag-usd--v1"/>
                                <div className="hlp">Plans</div>

                            </div> */}

                        <Badge badgeContent={notiCount} color="error">
                            <NotificationsOutlinedIcon color='action' className='cursor' style={{ margin: 0 }} onClick={handleClick2} />
                        </Badge>
                        <Popover
                            id={id2}
                            open={openPop2}
                            anchorEl={anchorEl2}
                            onClose={handleClose2}
                            anchorOrigin={{
                                vertical: 'bottom',
                                horizontal: 'left',
                            }}
                            transformOrigin={{
                                vertical: 'top',
                                horizontal: 'right',
                            }}
                        >
                            <div className="" style={{ padding: '15px', borderRadius: '10px', width: '300px', height: '200px' }}>
                                {
                                    notification?.length > 0 && notification?.map((row, index) => {
                                        return (
                                            <div className="display-2 cursor" key={index} onClick={() => {
                                                updateNotification(row?._id)
                                                if (row?.key == "KYB") {
                                                    navigate('/kyb')
                                                } else if (row?.key == "plan") {
                                                    navigate('/pricing')
                                                }
                                                else {
                                                    navigate('/supportbusiness', { state: { id: row?.ticket_id, time: row?.seen == false ? row?.time : null, notify: row?._id } });
                                                    seenMessage(row?._id);
                                                }
                                            }}  >
                                                <div className="display-1">
                                                    {/* <Avatar alt="Remy Sharp" src={profile?.image ? profile?.image : btnprf} sx={{ width: 25, height: 25 }} className='cursor' /> */}
                                                    <div className=" dcard-hd">
                                                        {row?.key ? row?.Title : row?.message}
                                                    </div>
                                                    <div className=""></div>
                                                    <Badge badgeContent={row?.count} color="error">
                                                        {/* <MailIcon color="action" /> */}
                                                    </Badge>
                                                </div>
                                                <div className="display-1">
                                                    <ChevronRightIcon />
                                                </div>
                                            </div>
                                        )
                                    })
                                }
                                {
                                    notification?.length == 0 && <div className="display-1">No Notification</div>
                                }
                            </div>

                        </Popover>
                        <Avatar onClick={handleClick} alt="Remy Sharp" src={imageExists ? profile?.image : btnprf} sx={{ width: 32, height: 32 }} className='cursor' />
                        <Popover
                            id={id}
                            open={openPop}
                            anchorEl={anchorEl}
                            onClose={handleClose}
                            anchorOrigin={{
                                vertical: 'bottom',
                                horizontal: 'left',
                            }}
                            transformOrigin={{
                                vertical: 'top',
                                horizontal: 'center',
                            }}
                        >
                            <div className="" style={{ padding: '15px', borderRadius: '10px' }}>

                                <div style={{ margin: "-4px -4px 10px -4px" }} className="display-1 cursor" onClick={(() => { navigate('/profileSetting') })}>
                                    <svg xmlns="http://www.w3.org/2000/svg" width="28" height="27" viewBox="0 0 28 27" fill="none">
                                        <path fillRule="evenodd" clipRule="evenodd" d="M17.9743 13.4669C17.9743 13.9807 17.8732 14.4894 17.6765 14.9641C17.4799 15.4387 17.1918 15.87 16.8285 16.2333C16.4652 16.5966 16.0339 16.8847 15.5593 17.0813C15.0846 17.2779 14.5759 17.3791 14.0621 17.3791C13.5484 17.3791 13.0396 17.2779 12.565 17.0813C12.0903 16.8847 11.659 16.5966 11.2958 16.2333C10.9325 15.87 10.6443 15.4387 10.4477 14.9641C10.2511 14.4894 10.1499 13.9807 10.1499 13.4669C10.1499 12.4293 10.5621 11.4342 11.2958 10.7006C12.0294 9.96687 13.0245 9.55469 14.0621 9.55469C15.0997 9.55469 16.0948 9.96687 16.8285 10.7006C17.5622 11.4342 17.9743 12.4293 17.9743 13.4669ZM16.2977 13.4669C16.2977 14.0598 16.0621 14.6284 15.6429 15.0477C15.2237 15.4669 14.655 15.7025 14.0621 15.7025C13.4692 15.7025 12.9006 15.4669 12.4813 15.0477C12.0621 14.6284 11.8266 14.0598 11.8266 13.4669C11.8266 12.874 12.0621 12.3054 12.4813 11.8861C12.9006 11.4669 13.4692 11.2314 14.0621 11.2314C14.655 11.2314 15.2237 11.4669 15.6429 11.8861C16.0621 12.3054 16.2977 12.874 16.2977 13.4669Z" fill="#373D4D" />
                                        <path fillRule="evenodd" clipRule="evenodd" d="M13.0584 3.12891C11.7205 3.12891 10.6329 4.21203 10.6329 5.55113V6.63426L9.85936 7.08137L8.92713 6.5426C8.36991 6.22097 7.70777 6.13378 7.08628 6.30021C6.46479 6.46664 5.93484 6.87306 5.61292 7.43012L4.60692 9.17385C4.28622 9.72971 4.19944 10.3902 4.36566 11.01C4.53189 11.6299 4.93751 12.1583 5.49332 12.4791L6.51049 13.0671V13.8685L5.49332 14.4576C4.93732 14.7782 4.53146 15.3066 4.36502 15.9264C4.19858 16.5463 4.28519 17.2069 4.6058 17.7629L5.6118 19.5066C5.7712 19.7826 5.9834 20.0244 6.23628 20.2184C6.48916 20.4124 6.77778 20.5546 7.08564 20.637C7.3935 20.7194 7.71458 20.7404 8.03055 20.6987C8.34651 20.657 8.65117 20.5535 8.92713 20.3941L9.99237 19.7793L10.634 20.1482V21.3856C10.634 22.7247 11.7205 23.8078 13.0596 23.8078H15.066C16.4039 23.8078 17.4915 22.7247 17.4915 21.3856V20.1817L18.16 19.795L19.1973 20.3941C19.4732 20.5537 19.7779 20.6573 20.0939 20.6991C20.4099 20.7408 20.731 20.7199 21.0389 20.6375C21.3468 20.555 21.6354 20.4127 21.8883 20.2187C22.1412 20.0247 22.3533 19.7827 22.5126 19.5066L23.5186 17.7629C23.8392 17.2069 23.9258 16.5463 23.7594 15.9264C23.5929 15.3066 23.1871 14.7782 22.6311 14.4576L21.6698 13.902V13.0347L22.6311 12.4791C23.1871 12.1585 23.5929 11.6301 23.7594 11.0103C23.9258 10.3904 23.8392 9.72985 23.5186 9.17385L22.5126 7.43012C22.3532 7.15414 22.141 6.91226 21.8881 6.7183C21.6352 6.52434 21.3466 6.38209 21.0388 6.29967C20.7309 6.21726 20.4098 6.19629 20.0939 6.23798C19.7779 6.27966 19.4732 6.38317 19.1973 6.5426L18.293 7.0646L17.4904 6.60072V5.55001C17.4901 5.23178 17.4272 4.91671 17.3051 4.62281C17.183 4.32891 17.0043 4.06193 16.7791 3.83711C16.5538 3.61229 16.2865 3.43403 15.9924 3.31252C15.6983 3.191 15.3831 3.12861 15.0648 3.12891H13.0584ZM12.3095 5.55113C12.3095 5.14091 12.6437 4.80557 13.0584 4.80557H15.066C15.4807 4.80557 15.8149 5.14091 15.8149 5.55113V6.78069C15.8149 7.26916 16.0753 7.71962 16.4967 7.9633L17.6089 8.60602C18.0325 8.84969 18.5545 8.84969 18.9771 8.60602L20.0356 7.99459C20.2076 7.8952 20.412 7.86809 20.6039 7.91922C20.7959 7.97036 20.9597 8.09555 21.0595 8.26733L22.0655 10.0111C22.1145 10.0957 22.1464 10.1892 22.1593 10.2862C22.1721 10.3832 22.1657 10.4818 22.1403 10.5763C22.115 10.6708 22.0712 10.7594 22.0116 10.8369C21.9519 10.9145 21.8776 10.9795 21.7928 11.0282L20.675 11.6721C20.4674 11.7922 20.2951 11.9648 20.1754 12.1726C20.0558 12.3804 19.9929 12.616 19.9931 12.8558V14.0809C19.9931 14.5694 20.2536 15.0198 20.675 15.2646L21.7928 15.9096C22.1504 16.1152 22.2712 16.5691 22.0666 16.9256L21.0606 18.6694C20.9608 18.8415 20.7968 18.9669 20.6046 19.018C20.4124 19.0692 20.2077 19.0419 20.0356 18.9421L18.8441 18.2547C18.6361 18.1346 18.4001 18.0714 18.16 18.0714C17.9198 18.0714 17.6839 18.1346 17.4759 18.2547L16.4967 18.8192C16.2892 18.9392 16.1169 19.1119 15.9972 19.3197C15.8775 19.5274 15.8146 19.7631 15.8149 20.0029V21.3856C15.8147 21.4837 15.7952 21.5809 15.7575 21.6715C15.7198 21.7621 15.6646 21.8444 15.595 21.9136C15.5254 21.9829 15.4429 22.0377 15.3521 22.075C15.2614 22.1124 15.1641 22.1314 15.066 22.1311H13.0584C12.6437 22.1311 12.3095 21.7958 12.3095 21.3856V19.9693C12.3095 19.4809 12.0491 19.0304 11.6277 18.7867L10.6776 18.2379C10.4694 18.1176 10.2333 18.0543 9.99293 18.0543C9.75255 18.0543 9.51641 18.1176 9.30829 18.2379L8.08991 18.9421C7.91782 19.0419 7.71315 19.0692 7.52093 19.018C7.32871 18.9669 7.16467 18.8415 7.06491 18.6694L6.05891 16.9256C6.00985 16.841 5.97799 16.7475 5.96515 16.6505C5.95231 16.5535 5.95874 16.4549 5.98408 16.3604C6.00942 16.2659 6.05316 16.1773 6.11281 16.0998C6.17245 16.0222 6.24682 15.9572 6.33165 15.9085L7.50532 15.2311C7.71286 15.1113 7.88516 14.9389 8.00487 14.7312C8.12457 14.5236 8.18744 14.2881 8.18716 14.0485V12.8882C8.18716 12.3998 7.92784 11.9493 7.50532 11.7056L6.33165 11.0271C6.24688 10.9785 6.17253 10.9136 6.11287 10.8361C6.05322 10.7587 6.00941 10.6703 5.98398 10.5759C5.95854 10.4815 5.95197 10.383 5.96463 10.2861C5.9773 10.1892 6.00896 10.0957 6.05779 10.0111L7.06379 8.26733C7.16355 8.09525 7.32759 7.96983 7.51981 7.91869C7.71204 7.86754 7.9167 7.89484 8.0888 7.99459L9.17528 8.62167C9.59891 8.86646 10.1198 8.86646 10.5434 8.62167L11.6277 7.99571C12.0491 7.75204 12.3095 7.30269 12.3095 6.8131V5.55113Z" fill="#373D4D" />
                                    </svg>
                                    <div className="hlp" style={{ whiteSpace: "nowrap" }} >Profile Setting</div>

                                </div>
                                {/* <div className="display-1">
                                    <AntSwitch defaultChecked inputProps={{ 'aria-label': 'ant design' }} />
                                    <div className="prodtin">Production</div>
                                </div> */}
                                <div style={{ margin: 0 }} className="display-1 margin-t-10px cursor" onClick={(async () => {
                                    await logout()
                                    window.localStorage.setItem('Rikosta', "")
                                    window.localStorage.setItem('userType', "")
                                    navigate('/')
                                })}>
                                    <LogoutIcon />
                                    <div className="hlp">Log out</div>
                                </div>
                            </div>

                        </Popover>
                    </Stack>



                </Toolbar>
            </AppBar>

            {
                isLgup ? <Drawers
                    variant={"permanent"}
                    open={open}
                // onClose={handleDrawerClose}

                >
                    {drawer}
                </Drawers> : <Drawer
                    variant={"temporary"}
                    open={open}
                // onClose={handleDrawerClose}

                >
                    {drawer}
                </Drawer>
            }
            {/* <Box component="main" sx={{ flexGrow: 1, p: 3 }}>
                <DrawerHeader />

            </Box> */}
        </Box >
    );
}
